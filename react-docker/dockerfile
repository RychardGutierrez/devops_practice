# set the base image to create the image for react app
FROM node:24-alpine

# create a user with permissions to run the app
# -S -> crate a system user
# -G add the user to a group
# This is done to avoid running the app as root 
# If the app is run as root, any vulnerability in the app can be exploited to gain access to the host sytem
RUN addgroup app && adduser -S -G app app

# set the uset to run the a
USER app

# set the working directory to app
WORKDIR /app

# copy package.json and package-lock.json to the working directory
# This is done before copyinh yhe rest of the files to take advantage of Docker's cache
# If the package.json and package-lock.json file haven't changed, Docker will use the cache dependecies
COPY package*.json ./

# sometimes the ownership of the files in the working directory is changed to root
# and thus the app can't access the files and throws and error -> EACCESS: permission denied
# to avoid this, chang ethe ownership of the files to the root user
USER root

# install dependencies
RUN npm i

# copy the rest of the files to the working directoy
COPY . .

# Expose port 5173 to tell docker that the container listens on the spedified network 
EXPOSE 5173


# command to run app
CMD npm run dev